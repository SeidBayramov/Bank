@using Bank.Core.Entities.Account
@model List<AppUser>

<div class="container mt-5">
    <div class="row">
        <div class="col-md-4">
            <div class="card">
                <div class="card-header">
                    <h5 class="card-title">Bank Assistants</h5>
                </div>
                <div class="card-body">
                    <ul id="userList" class="list-group">
                        @foreach (var user in Model.Where(u => u.CoonectionId != null))
                        {
                            <li class="list-group-item d-flex align-items-center" id="user-@user.Id">
                                @if (user.Name == "Said")
                                {
                                    <span class="badge rounded-circle bg-primary" style="width: 10px; height: 10px;"></span>
                                    <span class="ml-2">@user.Name - Support Assistant</span>
                                }
                                else
                                {
                                    <span class="badge rounded-circle bg-success" style="width: 10px; height: 10px;"></span>
                                    <span class="ml-2">@user.Name - Customer</span>
                                }
                            </li>
                        }
                    </ul>
                </div>
            </div>
        </div>
        <div class="col-md-8">
            <div class="card">
                <div class="card-header">
                    <h5 class="card-title">Customer Chat Room</h5>
                </div>
                <div class="card-body">
                    <ul id="chatMessages" class="list-unstyled"></ul>
                </div>
                <div class="card-footer">
                    <input type="text" id="userInput" class="form-control" placeholder="Your Name" value="@User.Identity.Name" readonly />
                    <br />
                    <textarea id="messageInput" class="form-control" placeholder="Type your message"></textarea>
                    <br />
                    <button id="sendButton" class="btn btn-primary">Send Message</button>
                </div>
            </div>
        </div>
    </div>
</div>

@section scripts {
    <script src="https://code.jquery.com/jquery-3.6.4.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/@@microsoft/signalr@3.1.12/dist/browser/signalr.min.js"></script>
    <script>
        var connection = new signalR.HubConnectionBuilder()
            .withUrl("/chatHub")
            .configureLogging(signalR.LogLevel.Information)
            .build();

        connection.on("ReceiveMessage", function (user, message, time) {
            var encodedUser = user;
            var encodedMessage = message;
            var formattedTime = new Date(time).toLocaleTimeString();

            $("#chatMessages").append(`<li><strong>${encodedUser}</strong> (${formattedTime}): ${encodedMessage}</li>`);
            $("#messageInput").val(""); // Clear the message input after sending a message
        });

        connection.on("SystemMessage", function (message) {
            $("#chatMessages").append(`<li class="text-danger">${message}</li>`);
        });

        connection.start().then(function () {
            $("#sendButton").click(function () {
                var user = $("#userInput").val();
                var message = $("#messageInput").val().trim(); // Trim to remove leading and trailing whitespaces

                if (message !== "") { // Check if the message is not empty
                    connection.invoke("SendMessage", user, message).catch(function (err) {
                        return console.error(err.toString());
                    });
                }
            });
        }).catch(function (err) {
            return console.error(err.toString());
        });
    </script>
}
